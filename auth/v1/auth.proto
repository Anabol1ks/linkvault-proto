syntax = "proto3";

package auth.v1;

option go_package = "github.com/Anabol1ks/linkvault-proto/auth/v1;authv1";

import "google/protobuf/empty.proto";
import "validate/validate.proto";
import "google/api/annotations.proto";

service AuthService {
  // Регистрация нового пользователя
  rpc Register (RegisterRequest) returns (RegisterResponse) {
    option (google.api.http) = {
      post: "/api/v1/auth/register"
      body: "*"
    };
  }

  // Логин (получение пары токенов)
  rpc Login (LoginRequest) returns (TokenPair) {
    option (google.api.http) = {
      post: "/api/v1/auth/login"
      body: "*"
    };
  }

  // Обновление токенов по refresh_token
  rpc Refresh (RefreshRequest) returns (TokenPair) {
    option (google.api.http) = {
      post: "/api/v1/auth/refresh"
      body: "*"
    };
  }

  // Профиль текущего пользователя (по JWT)
  rpc GetProfile (GetProfileRequest) returns (UserProfile) {
    option (google.api.http) = {
      get: "/api/v1/auth/profile"
    };
  }

  // Выход (инвалидация refresh-токена)
  rpc Logout (LogoutRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/api/v1/auth/logout"
    };
  }

  // Валидация access токена (внутреннее / отладка)
  rpc ValidateAccessToken (ValidateAccessTokenRequest) returns (ValidateAccessTokenResponse) {
    option (google.api.http) = {
      post: "/api/v1/auth/validate-access"
      body: "*"
    };
  }

  // Подтверждение email (ссылка из письма)
  rpc VerifyEmail (VerifyEmailRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      get: "/api/v1/auth/verify-email/{token}"
    };
  }

  // Повторная отправка письма подтверждения
  rpc ResendVerificationEmail (ResendVerificationEmailRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/api/v1/auth/verify-email/resend"
    };
  }

  // Запрос на сброс пароля (отправка письма)
  rpc RequestPasswordReset (RequestPasswordResetRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/api/v1/auth/password/reset/request"
      body: "*"
    };
  }

  // Подтверждение сброса пароля
  rpc ConfirmPasswordReset (ConfirmPasswordResetRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/api/v1/auth/password/reset/confirm"
      body: "*"
    };
  }
}

message RequestPasswordResetRequest {
  string email = 1;
}

message ConfirmPasswordResetRequest {
  string token = 1;
  string new_password = 2 [(validate.rules).string = {min_len: 8, max_len: 64}];
}

message RegisterRequest {
  string name = 1 [(validate.rules).string = {min_len: 3, max_len: 32}];
  string email = 2 [(validate.rules).string = {email: true, min_len: 5, max_len: 64}];
  string password = 3 [(validate.rules).string = {min_len: 8, max_len: 64}];
}
message RegisterResponse {
  string id = 1;
  string name = 2;
  string email = 3;
}

message LoginRequest {
  string email = 1 [(validate.rules).string = {email: true}];
  string password = 2 [(validate.rules).string = {min_len: 8}];
}
message TokenPair {
  string access_token = 1;
  string refresh_token = 2;
}

message RefreshRequest {
  string refresh_token = 1;
}

message GetProfileRequest {}
message UserProfile {
  string id = 1;
  string name = 2;
  string email = 3;
}

message LogoutRequest {}

message ValidateAccessTokenRequest {
  string access_token = 1;
}
message ValidateAccessTokenResponse {
  string user_id = 1;
  bool valid = 2;
}

message VerifyEmailRequest {
  string token = 1;
}

message ResendVerificationEmailRequest {}